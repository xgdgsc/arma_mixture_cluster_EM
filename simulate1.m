%% Simulate 1, generate results like Table 1 in the paper. The cluster number is known.
%Clustering results for time series generated by two AR(1) models with the
%  same noise variance but efficient AR coefficient distribution ranges.

%Two AR(1) models:
% component    AR coefficient    noise variance
%     1         0.60 ± 0.01          0.01
%     2         0.55 ± 0.01          0.01
%     3         0.50 ± 0.01          0.01
%     4         0.45 ± 0.01          0.01
%     5         0.40 ± 0.01          0.01

clear;
%generate test time series
result1 = zeros(5,3); % store similarities
G = cell(2,1); % two ground clusters
G{1} = [1:15];
G{2} = [16:30];
n = 1;
for base = 0.6:-0.05:0.40
    sim = zeros(10,1);
    for t = 1:10 % 10 trils for each dataset
        disp(['case: ', num2str(base), '±', num2str(0.01)]);
        phi1=0.3-0.01+(0.3+0.01-(0.3-0.01)).*rand(15,1);
        for i=1:15
            model1{i,1} = arima('Constant',0,'AR',phi1(i,1),'ARLags',1,'Variance',0.01);
            D{i,1} = simulate(model1{i,1},randi([500,1500],1));
        end
        % cluster 2
        phi2=base-0.01+(base+0.01-(base-0.01)).*rand(15,1);
        for i=1:15
            model2{i,1} = arima('Constant',0,'AR',phi2(i,1),'ARLags',1,'Variance',0.01);
            D{i+15,1} =simulate(model2{i,1},randi([500,1500],1));
        end
        clusterObj=cluster(D);
        clusterObj.initialize(1,0,2);
        [A,~] = clusterObj.EM();
        sim(t) = evaluate(G,A);
    end
    result1(n,1) = min(sim); % min similarity
    result1(n,2) = sum(sim)/10; % average similarity
    result1(n,3) = max(sim); % max similarity
    n = n+1;
end
result1
